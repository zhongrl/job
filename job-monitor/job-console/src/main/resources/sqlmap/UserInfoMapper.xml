<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xn.job.console.mapper.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="cn.xn.job.console.model.UserInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    
    <!-- 用户id -->
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    
    <!-- 用户 登录账号 -->
    <result column="user_login_name" property="userLoginName" jdbcType="VARCHAR" />
    
    <!-- 用户别名 -->
    <result column="user_as" property="userAs" jdbcType="VARCHAR" />
    
    <!-- 登录密码 -->
    <result column="login_pwd" property="loginPwd" jdbcType="VARCHAR" />
    
    <!-- 密码盐 -->
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    
    <!-- 支付密码 -->
    <result column="payment_pwd" property="paymentPwd" jdbcType="VARCHAR" />
    
    <!-- 手机号码 -->
    <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
    
    <!-- 邮箱 -->
    <result column="email" property="email" jdbcType="VARCHAR" />
    
    <!-- 用户类型 -->
    <result column="user_type" property="userType" jdbcType="CHAR" />
    
    <!-- 状态 -->
    <result column="status" property="status" jdbcType="INTEGER" />
    
    <!-- 创建时间 -->
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    
    <!-- 修改时间 -->
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    
    <!-- 最后登录时间 -->
    <result column="lase_logintime" property="laseLogintime" jdbcType="TIMESTAMP" />
    
    <!-- 是否实名认证 -->
    <result column="is_certification" property="isCertification" jdbcType="INTEGER" />
    <result column="is_question" property="isQuestion" jdbcType="INTEGER" />
    
    <!-- 是否修改支付密码(0/1) -->
    <result column="is_payment_pwd" property="isPaymentPwd" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, user_login_name, user_as, login_pwd, salt, payment_pwd, phone_number, 
    email, user_type, status, create_date, update_date, lase_logintime, is_certification, 
    is_question, is_payment_pwd
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xn.job.console.model.UserInfoCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job_user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from job_job_user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from job_job_user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xn.job.console.model.UserInfoCriteria" >
    delete from job_job_user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
    insert into job_job_user_info (user_id, user_login_name, user_as, 
      login_pwd, salt, payment_pwd, 
      phone_number, email, user_type, 
      status, create_date, update_date, 
      lase_logintime, is_certification, is_question, 
      is_payment_pwd)
    values (#{userId,jdbcType=VARCHAR}, #{userLoginName,jdbcType=VARCHAR}, #{userAs,jdbcType=VARCHAR}, 
      #{loginPwd,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{paymentPwd,jdbcType=VARCHAR}, 
      #{phoneNumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{userType,jdbcType=CHAR}, 
      #{status,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{laseLogintime,jdbcType=TIMESTAMP}, #{isCertification,jdbcType=INTEGER}, #{isQuestion,jdbcType=INTEGER}, 
      #{isPaymentPwd,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" >
    insert into job_job_user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userLoginName != null" >
        user_login_name,
      </if>
      <if test="userAs != null" >
        user_as,
      </if>
      <if test="loginPwd != null" >
        login_pwd,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="paymentPwd != null" >
        payment_pwd,
      </if>
      <if test="phoneNumber != null" >
        phone_number,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="laseLogintime != null" >
        lase_logintime,
      </if>
      <if test="isCertification != null" >
        is_certification,
      </if>
      <if test="isQuestion != null" >
        is_question,
      </if>
      <if test="isPaymentPwd != null" >
        is_payment_pwd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userLoginName != null" >
        #{userLoginName,jdbcType=VARCHAR},
      </if>
      <if test="userAs != null" >
        #{userAs,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null" >
        #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="paymentPwd != null" >
        #{paymentPwd,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="laseLogintime != null" >
        #{laseLogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="isCertification != null" >
        #{isCertification,jdbcType=INTEGER},
      </if>
      <if test="isQuestion != null" >
        #{isQuestion,jdbcType=INTEGER},
      </if>
      <if test="isPaymentPwd != null" >
        #{isPaymentPwd,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xn.job.console.model.UserInfoCriteria" resultType="java.lang.Integer" >
    select count(*) from job_user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update job_user_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userLoginName != null" >
        user_login_name = #{record.userLoginName,jdbcType=VARCHAR},
      </if>
      <if test="record.userAs != null" >
        user_as = #{record.userAs,jdbcType=VARCHAR},
      </if>
      <if test="record.loginPwd != null" >
        login_pwd = #{record.loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null" >
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentPwd != null" >
        payment_pwd = #{record.paymentPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNumber != null" >
        phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType,jdbcType=CHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.laseLogintime != null" >
        lase_logintime = #{record.laseLogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isCertification != null" >
        is_certification = #{record.isCertification,jdbcType=INTEGER},
      </if>
      <if test="record.isQuestion != null" >
        is_question = #{record.isQuestion,jdbcType=INTEGER},
      </if>
      <if test="record.isPaymentPwd != null" >
        is_payment_pwd = #{record.isPaymentPwd,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update job_user_info
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=VARCHAR},
      user_login_name = #{record.userLoginName,jdbcType=VARCHAR},
      user_as = #{record.userAs,jdbcType=VARCHAR},
      login_pwd = #{record.loginPwd,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      payment_pwd = #{record.paymentPwd,jdbcType=VARCHAR},
      phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=CHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      lase_logintime = #{record.laseLogintime,jdbcType=TIMESTAMP},
      is_certification = #{record.isCertification,jdbcType=INTEGER},
      is_question = #{record.isQuestion,jdbcType=INTEGER},
      is_payment_pwd = #{record.isPaymentPwd,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" >
    update job_user_info
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userLoginName != null" >
        user_login_name = #{userLoginName,jdbcType=VARCHAR},
      </if>
      <if test="userAs != null" >
        user_as = #{userAs,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null" >
        login_pwd = #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="paymentPwd != null" >
        payment_pwd = #{paymentPwd,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="laseLogintime != null" >
        lase_logintime = #{laseLogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="isCertification != null" >
        is_certification = #{isCertification,jdbcType=INTEGER},
      </if>
      <if test="isQuestion != null" >
        is_question = #{isQuestion,jdbcType=INTEGER},
      </if>
      <if test="isPaymentPwd != null" >
        is_payment_pwd = #{isPaymentPwd,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" >
    update job_user_info
    set user_id = #{userId,jdbcType=VARCHAR},
      user_login_name = #{userLoginName,jdbcType=VARCHAR},
      user_as = #{userAs,jdbcType=VARCHAR},
      login_pwd = #{loginPwd,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      payment_pwd = #{paymentPwd,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=CHAR},
      status = #{status,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      lase_logintime = #{laseLogintime,jdbcType=TIMESTAMP},
      is_certification = #{isCertification,jdbcType=INTEGER},
      is_question = #{isQuestion,jdbcType=INTEGER},
      is_payment_pwd = #{isPaymentPwd,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <!-- 登录查询 -->
    <select id="selectLoginByExample" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from job_user_info
        where (user_login_name = #{userName,jdbcType=VARCHAR}
        or phone_number = #{userName,jdbcType=VARCHAR}
        or email = #{userName,jdbcType=VARCHAR}
        )
    </select>
  
  <!-- ### 以上代码由MBG + CommentPlugin自动生成, 生成时间: 2015-07-13 11:35:36 ### -->



  <!-- Your codes goes here!!! -->
  
  <select resultMap="BaseResultMap" parameterType="cn.xn.job.console.model.UserInfoCriteria" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job_user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>