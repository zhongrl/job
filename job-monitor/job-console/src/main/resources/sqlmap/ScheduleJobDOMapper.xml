<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xn.job.console.mapper.ScheduleJobDOMapper" >
  <resultMap id="BaseResultMap" type="cn.xn.job.service.console.model.ScheduleJobDO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="SCHEDULE_JOB_ID" property="scheduleJobId" jdbcType="BIGINT" />
    <result column="JOB_NAME" property="jobName" jdbcType="VARCHAR" />
    <result column="ALIAS_NAME" property="aliasName" jdbcType="VARCHAR" />
    <result column="JOB_GROUP" property="jobGroup" jdbcType="VARCHAR" />
    <result column="JOB_TRIGGER" property="jobTrigger" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="CRON_EXPRESSION" property="cronExpression" jdbcType="VARCHAR" />
    <result column="IS_SYNC" property="isSync" jdbcType="INTEGER" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="GMT_CREATE" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="GMT_MODIFY" property="gmtModify" jdbcType="TIMESTAMP" />

    <result column="DAY_OF_MONTH" property="dayOfMonth" jdbcType="INTEGER" />
    <result column="HOUR" property="hour" jdbcType="INTEGER" />
    <result column="MINUTE" property="minute" jdbcType="INTEGER" />
    <result column="SECOND" property="second" jdbcType="INTEGER" />
    <result column="JOB_CLASS" property="jobClass" jdbcType="VARCHAR" />

    <result column="EXEC_TIME" property="execTime" jdbcType="TIMESTAMP" />
    <result column="NEXT_EXEC_TIME" property="nextExecTime" jdbcType="TIMESTAMP" />

      <result column="PARAMS" property="params" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, SCHEDULE_JOB_ID, JOB_NAME, ALIAS_NAME, JOB_GROUP, JOB_TRIGGER, STATUS, CRON_EXPRESSION, 
    IS_SYNC, DESCRIPTION, GMT_CREATE, GMT_MODIFY, DAY_OF_MONTH, HOUR, MINUTE, SECOND, JOB_CLASS,PARAMS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xn.job.service.console.model.ScheduleJobDOCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schedule_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from schedule_job
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from schedule_job
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xn.job.service.console.model.ScheduleJobDOCriteria" >
    delete from schedule_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
    insert into schedule_job (SCHEDULE_JOB_ID, JOB_NAME, ALIAS_NAME, 
      JOB_GROUP, JOB_TRIGGER, STATUS, 
      CRON_EXPRESSION, IS_SYNC, DESCRIPTION, 
      GMT_CREATE, GMT_MODIFY, DAY_OF_MONTH, HOUR, MINUTE,SECOND,JOB_CLASS, EXEC_TIME, NEXT_EXEC_TIME,
      PARAMS)
    values (#{scheduleJobId,jdbcType=BIGINT}, #{jobName,jdbcType=VARCHAR}, #{aliasName,jdbcType=VARCHAR}, 
      #{jobGroup,jdbcType=VARCHAR}, #{jobTrigger,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{cronExpression,jdbcType=VARCHAR}, #{isSync,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR},
      CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
      #{dayOfMonth,jdbcType=INTEGER}, #{hour,jdbcType=INTEGER}, #{minute,jdbcType=INTEGER}, #{second,jdbcType=INTEGER},
      #{jobClass,jdbcType=VARCHAR}, #{execTime,jdbcType=TIMESTAMP}, #{nextExecTime,jdbcType=TIMESTAMP},
      #{params,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" >
    insert into schedule_job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="scheduleJobId != null" >
        SCHEDULE_JOB_ID,
      </if>
      <if test="jobName != null" >
        JOB_NAME,
      </if>
      <if test="aliasName != null" >
        ALIAS_NAME,
      </if>
      <if test="jobGroup != null" >
        JOB_GROUP,
      </if>
      <if test="jobTrigger != null" >
        JOB_TRIGGER,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="cronExpression != null" >
        CRON_EXPRESSION,
      </if>
      <if test="isSync != null" >
        IS_SYNC,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
      <if test="gmtCreate != null" >
        GMT_CREATE,
      </if>
      <if test="gmtModify != null" >
        GMT_MODIFY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="scheduleJobId != null" >
        #{scheduleJobId,jdbcType=BIGINT},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="aliasName != null" >
        #{aliasName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null" >
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobTrigger != null" >
        #{jobTrigger,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null" >
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="isSync != null" >
        #{isSync,jdbcType=TINYINT},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xn.job.service.console.model.ScheduleJobDOCriteria" resultType="java.lang.Integer" >
    select count(*) from schedule_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update schedule_job
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.scheduleJobId != null" >
        SCHEDULE_JOB_ID = #{record.scheduleJobId,jdbcType=BIGINT},
      </if>
      <if test="record.jobName != null" >
        JOB_NAME = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.aliasName != null" >
        ALIAS_NAME = #{record.aliasName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobGroup != null" >
        JOB_GROUP = #{record.jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.jobTrigger != null" >
        JOB_TRIGGER = #{record.jobTrigger,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.cronExpression != null" >
        CRON_EXPRESSION = #{record.cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="record.isSync != null" >
        IS_SYNC = #{record.isSync,jdbcType=TINYINT},
      </if>
      <if test="record.description != null" >
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null" >
        GMT_CREATE = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModify != null" >
        GMT_MODIFY = #{record.gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update schedule_job
    set id = #{record.id,jdbcType=BIGINT},
      SCHEDULE_JOB_ID = #{record.scheduleJobId,jdbcType=BIGINT},
      JOB_NAME = #{record.jobName,jdbcType=VARCHAR},
      ALIAS_NAME = #{record.aliasName,jdbcType=VARCHAR},
      JOB_GROUP = #{record.jobGroup,jdbcType=VARCHAR},
      JOB_TRIGGER = #{record.jobTrigger,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      CRON_EXPRESSION = #{record.cronExpression,jdbcType=VARCHAR},
      IS_SYNC = #{record.isSync,jdbcType=TINYINT},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      GMT_CREATE = #{record.gmtCreate,jdbcType=TIMESTAMP},
      GMT_MODIFY = #{record.gmtModify,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" >
    update schedule_job
    <set >
      <if test="scheduleJobId != null" >
        SCHEDULE_JOB_ID = #{scheduleJobId,jdbcType=BIGINT},
      </if>
      <if test="jobName != null" >
        JOB_NAME = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="aliasName != null" >
        ALIAS_NAME = #{aliasName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null" >
        JOB_GROUP = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobTrigger != null" >
        JOB_TRIGGER = #{jobTrigger,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null" >
        CRON_EXPRESSION = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="isSync != null" >
        IS_SYNC = #{isSync,jdbcType=TINYINT},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        GMT_CREATE = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        GMT_MODIFY = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" >
    update schedule_job
    set SCHEDULE_JOB_ID = #{scheduleJobId,jdbcType=BIGINT},
      JOB_NAME = #{jobName,jdbcType=VARCHAR},
      ALIAS_NAME = #{aliasName,jdbcType=VARCHAR},
      JOB_GROUP = #{jobGroup,jdbcType=VARCHAR},
      JOB_TRIGGER = #{jobTrigger,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      CRON_EXPRESSION = #{cronExpression,jdbcType=VARCHAR},
      IS_SYNC = #{isSync,jdbcType=TINYINT},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      GMT_CREATE = #{gmtCreate,jdbcType=TIMESTAMP},
      GMT_MODIFY = #{gmtModify,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <update id="updateByScheduleId" >
        update schedule_job
        set SCHEDULE_JOB_ID = #{scheduleJobId,jdbcType=BIGINT},
        JOB_NAME = #{jobName,jdbcType=VARCHAR},
        ALIAS_NAME = #{aliasName,jdbcType=VARCHAR},
        JOB_GROUP = #{jobGroup,jdbcType=VARCHAR},
        JOB_TRIGGER = #{jobTrigger,jdbcType=VARCHAR},
        STATUS = #{status,jdbcType=VARCHAR},
        CRON_EXPRESSION = #{cronExpression,jdbcType=VARCHAR},
        IS_SYNC = #{isSync,jdbcType=TINYINT},
        DESCRIPTION = #{description,jdbcType=VARCHAR},
        GMT_CREATE = #{gmtCreate,jdbcType=TIMESTAMP},
        GMT_MODIFY = #{gmtModify,jdbcType=TIMESTAMP}
        where schedule_job_id = #{scheduleJobId,jdbcType=BIGINT}
    </update>
  <update id="updateStateByPrimaryKey" >
    update schedule_job
    set STATUS = #{status,jdbcType=VARCHAR},
        GMT_MODIFY = CURRENT_TIMESTAMP
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- ### 以上代码由MBG + CommentPlugin自动生成, 生成时间: 2015-07-01 00:41:27 ### -->



  <!-- Your codes goes here!!! -->
  
  <select resultMap="BaseResultMap" parameterType="cn.xn.job.service.console.model.ScheduleJobDOCriteria" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schedule_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>