<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xn.job.service.member.mapper.MemberAwardRecordDOMapper" >
  <resultMap id="BaseResultMap" type="cn.xn.job.service.member.model.MemberAwardRecordDO" >
    
    <!-- 主键 -->
    <id column="ID" property="id" jdbcType="BIGINT" />
    
    <!-- 用户ID -->
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    
    <!-- 投资记录ID -->
    <result column="invest_id" property="investId" jdbcType="VARCHAR" />
    
    <!-- 奖励金额 -->
    <result column="award_amont" property="awardAmont" jdbcType="DECIMAL" />
    
    <!-- 奖励比率 -->
    <result column="award_rate" property="awardRate" jdbcType="DECIMAL" />
    
    <!-- 奖励状态: 0/未派发,1/已派发 -->
    <result column="state" property="state" jdbcType="INTEGER" />
    
    <!-- 奖励时间 -->
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    
    <!-- 派发时间 -->
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, user_id, invest_id, award_amont, award_rate, state, create_date, update_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xn.job.service.member.model.MemberAwardRecordDOCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_award_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from member_award_record
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from member_award_record
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xn.job.service.member.model.MemberAwardRecordDOCriteria" >
    delete from member_award_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
    insert into member_award_record (user_id, invest_id, award_amont, 
      award_rate, state, create_date, 
      update_date)
    values (#{userId,jdbcType=VARCHAR}, #{investId,jdbcType=VARCHAR}, #{awardAmont,jdbcType=DECIMAL}, 
      #{awardRate,jdbcType=DECIMAL}, #{state,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" >
    insert into member_award_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="investId != null" >
        invest_id,
      </if>
      <if test="awardAmont != null" >
        award_amont,
      </if>
      <if test="awardRate != null" >
        award_rate,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="investId != null" >
        #{investId,jdbcType=VARCHAR},
      </if>
      <if test="awardAmont != null" >
        #{awardAmont,jdbcType=DECIMAL},
      </if>
      <if test="awardRate != null" >
        #{awardRate,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xn.job.service.member.model.MemberAwardRecordDOCriteria" resultType="java.lang.Integer" >
    select count(*) from member_award_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member_award_record
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.investId != null" >
        invest_id = #{record.investId,jdbcType=VARCHAR},
      </if>
      <if test="record.awardAmont != null" >
        award_amont = #{record.awardAmont,jdbcType=DECIMAL},
      </if>
      <if test="record.awardRate != null" >
        award_rate = #{record.awardRate,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member_award_record
    set ID = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=VARCHAR},
      invest_id = #{record.investId,jdbcType=VARCHAR},
      award_amont = #{record.awardAmont,jdbcType=DECIMAL},
      award_rate = #{record.awardRate,jdbcType=DECIMAL},
      state = #{record.state,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" >
    update member_award_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="investId != null" >
        invest_id = #{investId,jdbcType=VARCHAR},
      </if>
      <if test="awardAmont != null" >
        award_amont = #{awardAmont,jdbcType=DECIMAL},
      </if>
      <if test="awardRate != null" >
        award_rate = #{awardRate,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" >
    update member_award_record
    set user_id = #{userId,jdbcType=VARCHAR},
      invest_id = #{investId,jdbcType=VARCHAR},
      award_amont = #{awardAmont,jdbcType=DECIMAL},
      award_rate = #{awardRate,jdbcType=DECIMAL},
      state = #{state,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- ### 以上代码由MBG + CommentPlugin自动生成, 生成时间: 2015-08-21 11:10:32 ### -->



  <!-- Your codes goes here!!! -->
  
  <select resultMap="BaseResultMap" parameterType="cn.xn.job.service.member.model.MemberAwardRecordDOCriteria" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_award_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>